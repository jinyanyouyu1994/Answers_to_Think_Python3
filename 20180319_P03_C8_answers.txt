###
import sys
def test(did_pass):
    """print the result of a test"""
    linenum = sys._getframe(1).f_lineno
    if did_pass:
        msg = "test at line {0} ok.".format(linenum)
    else:
        msg = "test at line {0} FAILED.".format(linenum)
    print(msg)

def test_suite():  

test_suite()

###
fruit = "banana"
ix = 0
while ix < len(fruit):
    letter = fruit[ix]
    print(letter)
    ix += 1
	
#####
def remove_vowels(s):
    vowels = "aeiouAEIOU"
    s_sans_vowels = ""
    for x in s:
        if x not in vowels:
            s_sans_vowels += x
    return s_sans_vowels
	
###
def find(strng,ch):
    ix = 0
    while ix < len(strng):
        if strng[ix] == ch:
            return ix
        ix += 1
    return -1

###

def count_a(text):
    count = 0
    for c in text:
        if c == "a":
            count += 1
    return(count)
	

###

def find2(strng,ch,start):
    ix = start
    while ix < len(strng):
        if strng[ix] == ch:
            return ix
        ix += 1
    return -1
print(find2("banana", "a", 0))

###
import string

def remove_punctuation(s):
    s_without_punct = ""
    for letter in s:
        if letter not in string.punctuation:
            s_without_punct += letter
    return s_without_punct

def test_suite():
    test(remove_punctuation('"Well, I never did!", said Alice.') == "Well I never did said Alice")

test_suite()

###

s1 = "His name is {0}!".format("Arthur")
print(s1)

name = "Alice"
age = 19
s2 = "I am {1} and I am {0} years old.".format(age, name)
print(s2)

n1 = 4
n2 = 5
s3 = "2**10 = {0} and {1} * {2} = {3:f}".format(2**10,n1,n2,n1*n2)
print(s3)

###
n1 = "Paris"
n2 = "Whitney"
n3 = "Hilton"
print("Pi to three decimal places is {0:.3f}".format(3.1415926))

print("123456789 123456789 123456789 123456789 123456789 123456789")

print("|||{0:<15}|||{1:^15}|||{2:>15}|||Born in {3}|||".format(n1,n2,n3,1981))

print("The decimal value {0} converts to hex value {0:x}".format(123456))

###

layout = "{0:>4}{1:>6}{2:>6}{3:>8}{4:>13}{5:>24}"

print(layout.format("i", "i**2", "i**3", "i**5", "i**10", "i**20"))
for i in range(1,11):
    print(layout.format(i, i ** 2, i ** 3, i ** 5, i ** 10, i ** 20))

###T2

prefixes = "JKLMNOPQ"
suffix = "ack"

for letter in prefixes:
    if letter == "O" or letter == "Q":
        print(letter + "u" + suffix)
    else:
        print(letter + suffix)

		
###T3
def count_letters(strng,letter):
    count = 0
    for char in strng:
        if char == letter:
            count += 1
    return count

fruit = "banana"
print(count_letters(fruit,"a"))

###T4

def find_letters(strng,ch,star):
    ix = star
    while ix < len(strng):
        if strng[ix] == ch:
            return ix
        ix += 1
    return -1

fruit = "banana"
print(find_letters(fruit,"a",4))

###T5

import string

my_pome = """Write a function which removes all punctuation from the string, breaks the string into
a list of words, and counts the number of words in your text that contain the letter "e"."""

def remove_punc(s):
    s_without_punc = ""
    for letter in s:
        if letter not in string.punctuation:
            s_without_punc += letter
    return s_without_punc

a = len(remove_punc(my_pome))
b = remove_punc(my_pome).find("e")
c = "{:.3f}".format(b/a *100)
print("Yor text contains {0} words, of which {1} ({2}%) contain an 'e'.".format(a,b,c))

###T6

layout = "{0:>4}{1:>6}{2:>6}{3:>8}{4:>12}{5:>13}{6:>14}{7:>15}{8:>16}{9:>17}{10:>18}{11:>19}"

print(layout.format("i","i**2","i**3","i**4","i**5","i**6","i**7","i**8","i**9", "i**10", "i**11","i**12"))
for i in range(1,13):
    print(layout.format(i,i**2,i**3,i**4,i**5,i**6,i**7,i**8,i**9,i**10,i**11,i**12))

###T7

def reverse(n):
    s = ""
    i = 0
    for letter in n:     # add a loop
        if i < len(n):
            s += n[-1-i]
            i+=1
    return s

def test_suite():
    test(reverse("happy") == "yppah")
    test(reverse("Python") == "nohtyP")
    test(reverse("") == "")
    test(reverse("a") == "a")

test_suite()

###T8
def mirror(n):
    s = n +""
    i = 0
    for letter in n:        # add a loop
        if i < len(n):
            s += n[-1-i]
            i+=1
    return s

###T9

def remove_letter(n,strng):
    s = ""
    for letter in strng:
        if letter != n:
            s += letter
    return s

###T10

def reverse(n):
    s = ""
    i = 0
    for letter in n:     # add a loop
        if i < len(n):
            s += n[-1-i]
            i+=1
    return s

def is_palindrome(n):
    if n == reverse(n):
        return True
    else:
        return False

###T11

def count(a,strng):
    count = 0
    len_sub = len(strng)
    for i in range(len_sub):
        for j in range(len_sub):
            if strng[i:j+1] == a:
                count += 1
    return count

###T12

def remove(ch,strng):
    x = len(ch)
    y = len(strng)
    m = ""
    count = 0
    a = 0
    while a < y and count < y:
        if strng[a:a + x] == ch and count < 1:
            m = m + ""
            a += x
            count = count + 1
        else:
            count += 0
            m = m + strng[a]
            a += 1

    return m

def test_suite():
    test(remove("an", "banana") == "bana")
    test(remove("cyc", "bicycle") == "bile")
    test(remove("iss", "Mississippi") == "Missippi")

test_suite()

	
###T13

def remove_all(ch,strng):
    x = len(ch)
    y = len(strng)
    m = ""
    count = 0
    a = 0
    while a < y:
        if strng[a:a + x] == ch:
            count += 1
            m = m + ""
            a += x

        else:

            m = m + strng[a]
            a += 1
            count += 1
    return m

def test_suite():
    test(remove_all("an", "banana") == "ba")
    test(remove_all("cyc", "bicycle") == "bile")
    test(remove_all("iss", "Mississippi") == "Mippi")
    test(remove_all("eggs", "bicycle") == "bicycle")
test_suite()




		